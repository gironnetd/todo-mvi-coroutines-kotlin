version: 2

defaults: &defaults
  docker:
    - image: circleci/android:api-26-alpha
  working_directory: ~/todoapp
  environment:
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx3200m -XX:+HeapDumpOnOutOfMemoryError"'
  resource_class: large

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew dependencies
      - run:
          name: Check APKs
          command: ./gradlew clean check
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - persist_to_workspace:
          root: .
          paths:
            - .gradle
            - build
            - app/build
  firebase_test_lab:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - attach_workspace:
          at: ~/todoapp
      - run:
          name: Decrypt Firebase's Service Account
          command: openssl enc -aes-256-cbc -d -in signing/firebase_service-account.aes -out signing/firebase_service-account.json -k $ENCRYPT_KEY
      - run:
          name: Assemble APKs for tests
          command: ./gradlew :app:assembleDebug :app:assembleAndroidTest -PdisablePreDex
      - run:
          name: Set GCloud
          command: |
            gcloud config set project android-architecture-mvi
            gcloud auth activate-service-account ci-service-account@android-architecture-mvi.iam.gserviceaccount.com \
              --key-file ./signing/firebase_service-account.json
      - run:
          name: Tests on Firebase Test Lab
          command: |
            echo y | sudo pip uninstall crcmod
            sudo pip install -U crcmod
            export _GCLOUD_LOG=_gcloud.log
            export _DEVICES=${TESTLAB_DEVICES:-Nexus5X}
            export _APIS=${TESTLAB_APIS:-26}
            export _LOCALES=${TESTLAB_LOCALES:-fr}
            if gcloud firebase test android run \
              --type instrumentation \
              --app app/build/outputs/apk/mock/debug/app-mock-debug.apk \
              --test app/build/outputs/apk/androidTest/mock/debug/app-mock-debug-androidTest.apk \
              --device-ids $_DEVICES \
              --os-version-ids $_APIS \
              --locales $_LOCALES \
              --orientations portrait \
                2>&1 | tee $_GCLOUD_LOG
            then
                echo "Test matrix successfully finished"
                FIREBASE_SUCCESS=true
            else
                FIREBASE_SUCCESS=$?
                echo "Test matrix exited abnormally with non-zero exit code: " $FIREBASE_SUCCESS
            fi
            export _BUCKET_ID=`cat $_GCLOUD_LOG | sed -n -E 's#^.+test-lab-(.+)/.+#\1#p'`
            echo "Bucket ID: " $_BUCKET_ID
            mkdir -p firebaseTestLab
            gsutil -m cp -r gs://test-lab-$_BUCKET_ID firebaseTestLab/
            test $FIREBASE_SUCCESS = true || exit $FIREBASE_SUCCESS
      - store_artifacts:
          path: firebaseTestLab
          destination: firebaseTestLab
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apks

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - firebase_test_lab:
          requires:
            - build